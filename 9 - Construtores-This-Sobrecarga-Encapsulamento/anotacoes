Construtores:
É uma operação especial da classe, que executa no momento da
instanciação do objeto;

Usos comuns:
    • Iniciar valores dos atributos;

    • Permitir ou obrigar que o objeto receba dados / dependências no momento de sua
      instanciação (injeção de dependência);

    • Se um construtor customizado não for especificado, a classe disponibiliza o
      construtor padrão:
            Product p = new Product();

    • É possível especificar mais de um construtor na mesma classe (sobrecarga);

Instanciando um produto com atributos vazios:
    Product p = new Product();

Podemos usar o construtor para que a inicialização desses valores seja obrigatória
    Product p = new Product(name, price, quantity);
Assim, o Produto inicializará com valores em seus atributos


This:
É uma referência para o próprio objeto;

Usos comuns:
    • Diferenciar atributos de variáveis locais;
    • Passar o próprio objeto como argumento na chamada de um método ou
      construtor;

Sobrecarga:
    • É um recurso que uma classe possui de oferecer mais de uma
      operação com o mesmo nome, porém com diferentes listas de
      parâmetros.
Também é possível incluir um construtor padrão

Encapsulamento:
    • É um princípio que consiste em
      esconder detalhes de implementação
      de uma classe, expondo apenas
      operações seguras e que mantenham
      os objetos em um estado consistente.

    • Regra de ouro: o objeto deve sempre
      estar em um estado consistente, e a
      própria classe deve garantir isso.

    • Um objeto NÃO deve expor nenhum atributo (modificador de acesso
      private);
    • Os atributos devem ser acessados por meio de métodos get e set
      Padrão JavaBeans: https://en.wikipedia.org/wiki/JavaBeans